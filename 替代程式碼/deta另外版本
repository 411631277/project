/*import 'package:flutter/material.dart';

class DetaWidget extends StatelessWidget {
  const DetaWidget({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Container(
          width: double.infinity,
          decoration: const BoxDecoration(
            color: Color.fromRGBO(233, 227, 213, 1),
          ),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              // 圖示
              Padding(
                padding: const EdgeInsets.only(top: 56, bottom: 20),
                child: Center(
                  child: Image.asset(
                    'assets/images/5.png',
                    width: 100,
                    height: 84,
                  ),
                ),
              ),
              // 姓名與生日
              const SectionTitle('姓名', '生日'),
              const InputRow(hint1: "輸入姓名", hint2: "輸入生日"),
              // 血型、身高與體重
              const SectionTitle('血型', '身高', '體重'),
              const InputRow(hint1: "輸入血型", hint2: "輸入身高", hint3: "輸入體重"),
              // 緊急聯絡人
              const Padding(
                padding: EdgeInsets.symmetric(horizontal: 16.0, vertical: 10),
                child: Text(
                  '緊急聯絡人',
                  style: TextStyle(
                    color: Color.fromRGBO(147, 129, 108, 1),
                    fontFamily: 'Inter',
                    fontSize: 20,
                    fontWeight: FontWeight.normal,
                  ),
                ),
              ),
              // 緊急聯絡人資料
              const SectionTitle('姓名', '姓名'),
              const InputRow(hint1: "聯絡人1姓名", hint2: "聯絡人2姓名"),
              const SectionTitle('關係', '關係'),
              const InputRow(hint1: "聯絡人1關係", hint2: "聯絡人2關係"),
              const SectionTitle('電話', '電話'),
              const InputRow(hint1: "聯絡人1電話", hint2: "聯絡人2電話"),
              // 返回按鈕
              Padding(
                padding: const EdgeInsets.only(top: 50, left: 16),
                child: GestureDetector(
                  onTap: () {
                    Navigator.pop(context); // 返回上一頁
                  },
                  child: Image.asset(
                    'assets/images/7.png',
                    width: 58,
                    height: 61,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

class SectionTitle extends StatelessWidget {
  final String title1;
  final String? title2;
  final String? title3;

  // ignore: use_key_in_widget_constructors
  const SectionTitle(this.title1, [this.title2, this.title3]);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 10),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          Text(
            title1,
            style: const TextStyle(
              color: Color.fromRGBO(147, 129, 108, 1),
              fontFamily: 'Inter',
              fontSize: 20,
              fontWeight: FontWeight.normal,
            ),
          ),
          if (title2 != null)
            Text(
              title2!,
              style: const TextStyle(
                color: Color.fromRGBO(147, 129, 108, 1),
                fontFamily: 'Inter',
                fontSize: 20,
                fontWeight: FontWeight.normal,
              ),
            ),
          if (title3 != null)
            Text(
              title3!,
              style: const TextStyle(
                color: Color.fromRGBO(147, 129, 108, 1),
                fontFamily: 'Inter',
                fontSize: 20,
                fontWeight: FontWeight.normal,
              ),
            ),
        ],
      ),
    );
  }
}

class InputRow extends StatelessWidget {
  final String hint1;
  final String? hint2;
  final String? hint3;

  const InputRow({required this.hint1, this.hint2, this.hint3, super.key});

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16.0, vertical: 5),
      child: Row(
        children: [
          Flexible(
            child: TextField(
              decoration: InputDecoration(
                hintText: hint1,
                filled: true,
                fillColor: Colors.white,
                border: const OutlineInputBorder(),
              ),
            ),
          ),
          if (hint2 != null) ...[
            const SizedBox(width: 10),
            Flexible(
              child: TextField(
                decoration: InputDecoration(
                  hintText: hint2,
                  filled: true,
                  fillColor: Colors.white,
                  border: const OutlineInputBorder(),
                ),
              ),
            ),
          ],
          if (hint3 != null) ...[
            const SizedBox(width: 10),
            Flexible(
              child: TextField(
                decoration: InputDecoration(
                  hintText: hint3,
                  filled: true,
                  fillColor: Colors.white,
                  border: const OutlineInputBorder(),
                ),
              ),
            ),
          ],
        ],
      ),
    );
  }
} */